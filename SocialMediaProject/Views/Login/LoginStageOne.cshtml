@model SocialMediaProject.Models.LoginStageOneViewModel

@{
    ViewData["Title"] = "LoginStageOne";
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Login</title>

    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.css" />
    <link rel="stylesheet" href="~/css/site.css" />
</head>

<body>
    <div class="center-div">
        <h3>Log In to SMP</h3>

        <hr />

        <form method="post">
            @Html.AntiForgeryToken()

            <div class="form-group">
                <label for="Email">Email: </label>
                @Html.EditorFor(Model => Model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Email" } })
                <small class="form-text text-muted">We will never share your email.</small>
            </div>
            <div class="form-group">
                <label for="Password">Password: </label>
                @Html.EditorFor(Model => Model.Password, new { htmlAttributes = new { @class = "form-control", placeholder = "Password" } })
                <small class="form-text text-muted">Your will keep your password safe.</small>
            </div>

            <input class="btn btn-primary center-horizontal" type="submit" value="Log In" />
        </form>

        @if (!ViewData.ModelState.IsValid)
        {
            <hr />

            <div class="validation-messages">
                <label>@Html.ValidationMessageFor(Model => Model.Email)</label>
                <label>@Html.ValidationMessageFor(Model => Model.Password)</label>
                <label>@Html.ValidationMessage("Incorrect")</label>
            </div>
        }
    </div>

    @{
        await Html.RenderPartialAsync("_SiteFooter");
    }
</body>
</html>