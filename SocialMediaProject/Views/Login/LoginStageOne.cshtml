@model SocialMediaProject.Models.LoginStageOneViewModel

@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Login - SMP</title>

    <script src="~/lib/jquery/dist/jquery.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.js"></script>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.css" />
    <link rel="stylesheet" href="~/css/site.css" />
    <link rel="stylesheet" href="~/css/login.css" />
</head>

<body>
    <!-- Renders the modal containing the form allowing users to create new accounts -->
    @{
        await Html.RenderPartialAsync("SignUpModal", new SocialMediaProject.Models.SignUpViewModel());
    }

    <div class="login-container">
        <div class="text-center login-title">
            <h1>Social Media Project</h1>
        </div>

        <div class="login-form-container">
            <form id="login-form" action="@Url.Action("LoginStageOne", "Login")" method="post">
                @Html.AntiForgeryToken()

                <div class="form-group">
                    @Html.EditorFor(Model => Model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Email" } })
                    @*<small>Error here</small>*@
                </div>
                <div class="form-group">
                    @Html.EditorFor(Model => Model.Password, new { htmlAttributes = new { @class = "form-control", placeholder = "Password" } })
                </div>

                <div class="btn-toolbar justify-content-center">
                    <input class="btn btn-primary login-btn" type="submit" value="Log-In" />
                </div>

                <div class="btn-toolbar justify-content-center mt-2">
                    <a href="" data-toggle="modal" data-target="#signUpModal">Need an account?</a>
                </div>
            </form>

            <div class="text-center mt-3">
                @if (Model.AccountCreated)
                {
                    <hr />
                    <label class="text-success">Account Successfully Created</label>
                }
                else if (!ViewData.ModelState.IsValid)
                {
                    <hr />
                    <div class="text-center">
                        @foreach (var key in ViewData.ModelState.Keys)
                        {
                            <label class="text-danger">@Html.ValidationMessage(key)</label>
                        }
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- Renders the footer -->
    @{
        await Html.RenderPartialAsync("_SiteFooter");
    }

    <script src="~/js/login.js"></script>
</body>
</html>